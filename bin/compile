#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

indent() {
  sed -u 's/^/       /'
}

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
profile="$build/.profile.d"
prefix="/app/.rubinius"
yaml="http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz"

export PATH=$prefix/bin:$PATH
export LANG=en_US.UTF-8
export LIBRARY_PATH=$prefix/lib
export LD_LIBRARY_PATH=$prefix/lib

cd $build

function install_yaml {
  echo "-----> Installing PyYAML"
  [ -e yaml* ] || curl $yaml | tar zxf - | indent
  pushd yaml*
    ./configure --prefix=$prefix | indent
    make install | indent
  popd
}

function install_rubinius {
  echo "-----> Cloning Rubinius master"
  git clone git://github.com/rubinius/rubinius.git --depth 1

  pushd rubinius

    set +e

    echo "-----> Configuring Rubinius"

    ./configure --enable-version 19 --default-version 19 --prefix=$prefix \
      --with-lib-dir $prefix/lib --with-include-dir $prefix/include | indent

    if [ $? != 0 ]; then
      echo "-----> Build failed! Here's configure.log:"
      cat configure.log | indent
      exit 1
    fi

    set -e

    echo "-----> Building & installing Rubinius"
    CXXFLAGS=-fPIC CFLAGS=fPIC rake install | indent

  popd
}

echo "-----> Adding Rubinius gems directory to \$PATH"
export PATH=$prefix/gems/1.9/bin:$PATH

echo "-----> PATH: $PATH"

if [ -d $cache/.rubinius ]; then
  echo "-----> Using cached build"
  cp -r $cache/.rubinius $prefix
else
  mkdir -p $prefix

  pushd $cache

    install_yaml
    install_rubinius

    echo "-----> Cleaning up"
    rm -rf rubinius
    rm -rf yaml*

    echo "-----> Installing Bundler with `which gem`"
    gem install bundler --no-rdoc --no-ri | indent

  popd

  echo "-----> Caching built Ruby"
  cp -r $prefix $cache/.rubinius
fi

if [ -d $cache/vendor ]; then
  echo "-----> Restoring cached gems"
  cp -r $cache/vendor /app/vendor
fi

echo "-----> Bundling with `which bundle`"
BUNDLE_GEMFILE=$build/Gemfile bundle install --without development:test \
  --path /app/vendor/bundle \ --binstubs /app/vendor/bundle/bin \
  --deployment | indent

echo "-----> Caching installed gems"
cp -r /app/vendor $cache/vendor

echo "-----> Building runtime environment"
mkdir -p $profile

cat > $profile/rubinius.sh <<EOF
export GEM_PATH="\$HOME/vendor/bundle/rbx/1.9:\$HOME/.rubinius/gems/1.9:\$GEM_PATH"
export LANG=\${LANG:-en_US.UTF-8}
export PATH="\$HOME/bin:\$HOME/vendor/bundle/rbx/1.9/bin:\$HOME/.rubinius/gems/1.9/bin:\$HOME/.rubinius/bin:/usr/bin:/usr/sbin:/bin:/sbin:\$PATH"
export RACK_ENV=\${RACK_ENV:-production}
EOF

echo "-----> Moving built Rubinius to build dir"
mv /app/.rubinius $build
mv /app/vendor $build

echo "-----> Done!"
